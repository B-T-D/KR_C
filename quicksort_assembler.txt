"""Assembler instructions for the quicksort program, printed to terminal with
		$ objdump -d quicksort
	then pasted to txt. "-d" for "disassembler". """

quicksort:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:       48 83 ec 08             sub    $0x8,%rsp
    1004:       48 8b 05 dd 2f 00 00    mov    0x2fdd(%rip),%rax        # 3fe8 <__gmon_start__>
    100b:       48 85 c0                test   %rax,%rax
    100e:       74 02                   je     1012 <_init+0x12>
    1010:       ff d0                   callq  *%rax
    1012:       48 83 c4 08             add    $0x8,%rsp
    1016:       c3                      retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:       ff 35 8a 2f 00 00       pushq  0x2f8a(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:       ff 25 8c 2f 00 00       jmpq   *0x2f8c(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:       0f 1f 40 00             nopl   0x0(%rax)

0000000000001030 <puts@plt>:
    1030:       ff 25 8a 2f 00 00       jmpq   *0x2f8a(%rip)        # 3fc0 <puts@GLIBC_2.2.5>
    1036:       68 00 00 00 00          pushq  $0x0
    103b:       e9 e0 ff ff ff          jmpq   1020 <.plt>

0000000000001040 <__stack_chk_fail@plt>:
    1040:       ff 25 82 2f 00 00       jmpq   *0x2f82(%rip)        # 3fc8 <__stack_chk_fail@GLIBC_2.4>
    1046:       68 01 00 00 00          pushq  $0x1
    104b:       e9 d0 ff ff ff          jmpq   1020 <.plt>

0000000000001050 <__assert_fail@plt>:
    1050:       ff 25 7a 2f 00 00       jmpq   *0x2f7a(%rip)        # 3fd0 <__assert_fail@GLIBC_2.2.5>
    1056:       68 02 00 00 00          pushq  $0x2
    105b:       e9 c0 ff ff ff          jmpq   1020 <.plt>

Disassembly of section .plt.got:

0000000000001060 <__cxa_finalize@plt>:
    1060:       ff 25 92 2f 00 00       jmpq   *0x2f92(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1066:       66 90                   xchg   %ax,%ax

Disassembly of section .text:

0000000000001070 <_start>:
    1070:       31 ed                   xor    %ebp,%ebp
    1072:       49 89 d1                mov    %rdx,%r9
    1075:       5e                      pop    %rsi
    1076:       48 89 e2                mov    %rsp,%rdx
    1079:       48 83 e4 f0             and    $0xfffffffffffffff0,%rsp
    107d:       50                      push   %rax
    107e:       54                      push   %rsp
    107f:       4c 8d 05 7a 03 00 00    lea    0x37a(%rip),%r8        # 1400 <__libc_csu_fini>
    1086:       48 8d 0d 13 03 00 00    lea    0x313(%rip),%rcx        # 13a0 <__libc_csu_init>
    108d:       48 8d 3d af 01 00 00    lea    0x1af(%rip),%rdi        # 1243 <main>
    1094:       ff 15 46 2f 00 00       callq  *0x2f46(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    109a:       f4                      hlt    
    109b:       0f 1f 44 00 00          nopl   0x0(%rax,%rax,1)

00000000000010a0 <deregister_tm_clones>:
    10a0:       48 8d 3d 69 2f 00 00    lea    0x2f69(%rip),%rdi        # 4010 <__TMC_END__>
    10a7:       48 8d 05 62 2f 00 00    lea    0x2f62(%rip),%rax        # 4010 <__TMC_END__>
    10ae:       48 39 f8                cmp    %rdi,%rax
    10b1:       74 15                   je     10c8 <deregister_tm_clones+0x28>
    10b3:       48 8b 05 1e 2f 00 00    mov    0x2f1e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ba:       48 85 c0                test   %rax,%rax
    10bd:       74 09                   je     10c8 <deregister_tm_clones+0x28>
    10bf:       ff e0                   jmpq   *%rax
    10c1:       0f 1f 80 00 00 00 00    nopl   0x0(%rax)
    10c8:       c3                      retq   
    10c9:       0f 1f 80 00 00 00 00    nopl   0x0(%rax)

00000000000010d0 <register_tm_clones>:
    10d0:       48 8d 3d 39 2f 00 00    lea    0x2f39(%rip),%rdi        # 4010 <__TMC_END__>
    10d7:       48 8d 35 32 2f 00 00    lea    0x2f32(%rip),%rsi        # 4010 <__TMC_END__>
    10de:       48 29 fe                sub    %rdi,%rsi
    10e1:       48 c1 fe 03             sar    $0x3,%rsi
    10e5:       48 89 f0                mov    %rsi,%rax
    10e8:       48 c1 e8 3f             shr    $0x3f,%rax
    10ec:       48 01 c6                add    %rax,%rsi
    10ef:       48 d1 fe                sar    %rsi
    10f2:       74 14                   je     1108 <register_tm_clones+0x38>
    10f4:       48 8b 05 f5 2e 00 00    mov    0x2ef5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    10fb:       48 85 c0                test   %rax,%rax
    10fe:       74 08                   je     1108 <register_tm_clones+0x38>
    1100:       ff e0                   jmpq   *%rax
    1102:       66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)
    1108:       c3                      retq   
    1109:       0f 1f 80 00 00 00 00    nopl   0x0(%rax)

0000000000001110 <__do_global_dtors_aux>:
    1110:       80 3d f9 2e 00 00 00    cmpb   $0x0,0x2ef9(%rip)        # 4010 <__TMC_END__>
    1117:       75 2f                   jne    1148 <__do_global_dtors_aux+0x38>
    1119:       55                      push   %rbp
    111a:       48 83 3d d6 2e 00 00    cmpq   $0x0,0x2ed6(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1121:       00 
    1122:       48 89 e5                mov    %rsp,%rbp
    1125:       74 0c                   je     1133 <__do_global_dtors_aux+0x23>
    1127:       48 8b 3d da 2e 00 00    mov    0x2eda(%rip),%rdi        # 4008 <__dso_handle>
    112e:       e8 2d ff ff ff          callq  1060 <__cxa_finalize@plt>
    1133:       e8 68 ff ff ff          callq  10a0 <deregister_tm_clones>
    1138:       c6 05 d1 2e 00 00 01    movb   $0x1,0x2ed1(%rip)        # 4010 <__TMC_END__>
    113f:       5d                      pop    %rbp
    1140:       c3                      retq   
    1141:       0f 1f 80 00 00 00 00    nopl   0x0(%rax)
    1148:       c3                      retq   
    1149:       0f 1f 80 00 00 00 00    nopl   0x0(%rax)

0000000000001150 <frame_dummy>:
    1150:       e9 7b ff ff ff          jmpq   10d0 <register_tm_clones>

0000000000001155 <qsort>:
    1155:       55                      push   %rbp
    1156:       48 89 e5                mov    %rsp,%rbp
    1159:       48 83 ec 20             sub    $0x20,%rsp
    115d:       48 89 7d e8             mov    %rdi,-0x18(%rbp)
    1161:       89 75 e4                mov    %esi,-0x1c(%rbp)
    1164:       89 55 e0                mov    %edx,-0x20(%rbp)
    1167:       8b 45 e4                mov    -0x1c(%rbp),%eax
    116a:       3b 45 e0                cmp    -0x20(%rbp),%eax
    116d:       0f 8d cd 00 00 00       jge    1240 <qsort+0xeb>
    1173:       8b 55 e4                mov    -0x1c(%rbp),%edx
    1176:       8b 45 e0                mov    -0x20(%rbp),%eax
    1179:       01 d0                   add    %edx,%eax
    117b:       89 c2                   mov    %eax,%edx
    117d:       c1 ea 1f                shr    $0x1f,%edx
    1180:       01 d0                   add    %edx,%eax
    1182:       d1 f8                   sar    %eax
    1184:       89 c2                   mov    %eax,%edx
    1186:       8b 4d e4                mov    -0x1c(%rbp),%ecx
    1189:       48 8b 45 e8             mov    -0x18(%rbp),%rax
    118d:       89 ce                   mov    %ecx,%esi
    118f:       48 89 c7                mov    %rax,%rdi
    1192:       e8 8e 01 00 00          callq  1325 <swap>
    1197:       8b 45 e4                mov    -0x1c(%rbp),%eax
    119a:       89 45 fc                mov    %eax,-0x4(%rbp)
    119d:       8b 45 e4                mov    -0x1c(%rbp),%eax
    11a0:       83 c0 01                add    $0x1,%eax
    11a3:       89 45 f8                mov    %eax,-0x8(%rbp)
    11a6:       eb 4c                   jmp    11f4 <qsort+0x9f>
    11a8:       8b 45 f8                mov    -0x8(%rbp),%eax
    11ab:       48 98                   cltq   
    11ad:       48 8d 14 85 00 00 00    lea    0x0(,%rax,4),%rdx
    11b4:       00 
    11b5:       48 8b 45 e8             mov    -0x18(%rbp),%rax
    11b9:       48 01 d0                add    %rdx,%rax
    11bc:       8b 10                   mov    (%rax),%edx
    11be:       8b 45 e4                mov    -0x1c(%rbp),%eax
    11c1:       48 98                   cltq   
    11c3:       48 8d 0c 85 00 00 00    lea    0x0(,%rax,4),%rcx
    11ca:       00 
    11cb:       48 8b 45 e8             mov    -0x18(%rbp),%rax
    11cf:       48 01 c8                add    %rcx,%rax
    11d2:       8b 00                   mov    (%rax),%eax
    11d4:       39 c2                   cmp    %eax,%edx
    11d6:       7d 18                   jge    11f0 <qsort+0x9b>
    11d8:       83 45 fc 01             addl   $0x1,-0x4(%rbp)
    11dc:       8b 55 f8                mov    -0x8(%rbp),%edx
    11df:       8b 4d fc                mov    -0x4(%rbp),%ecx
    11e2:       48 8b 45 e8             mov    -0x18(%rbp),%rax
    11e6:       89 ce                   mov    %ecx,%esi
    11e8:       48 89 c7                mov    %rax,%rdi
    11eb:       e8 35 01 00 00          callq  1325 <swap>
    11f0:       83 45 f8 01             addl   $0x1,-0x8(%rbp)
    11f4:       8b 45 f8                mov    -0x8(%rbp),%eax
    11f7:       3b 45 e0                cmp    -0x20(%rbp),%eax
    11fa:       7e ac                   jle    11a8 <qsort+0x53>
    11fc:       8b 55 fc                mov    -0x4(%rbp),%edx
    11ff:       8b 4d e4                mov    -0x1c(%rbp),%ecx
    1202:       48 8b 45 e8             mov    -0x18(%rbp),%rax
    1206:       89 ce                   mov    %ecx,%esi
    1208:       48 89 c7                mov    %rax,%rdi
    120b:       e8 15 01 00 00          callq  1325 <swap>
    1210:       8b 45 fc                mov    -0x4(%rbp),%eax
    1213:       8d 50 ff                lea    -0x1(%rax),%edx
    1216:       8b 4d e4                mov    -0x1c(%rbp),%ecx
    1219:       48 8b 45 e8             mov    -0x18(%rbp),%rax
    121d:       89 ce                   mov    %ecx,%esi
    121f:       48 89 c7                mov    %rax,%rdi
    1222:       e8 2e ff ff ff          callq  1155 <qsort>
    1227:       8b 45 fc                mov    -0x4(%rbp),%eax
    122a:       8d 48 01                lea    0x1(%rax),%ecx
    122d:       8b 55 e0                mov    -0x20(%rbp),%edx
    1230:       48 8b 45 e8             mov    -0x18(%rbp),%rax
    1234:       89 ce                   mov    %ecx,%esi
    1236:       48 89 c7                mov    %rax,%rdi
    1239:       e8 17 ff ff ff          callq  1155 <qsort>
    123e:       eb 01                   jmp    1241 <qsort+0xec>
    1240:       90                      nop
    1241:       c9                      leaveq 
    1242:       c3                      retq   

0000000000001243 <main>:
    1243:       55                      push   %rbp
    1244:       48 89 e5                mov    %rsp,%rbp
    1247:       48 83 ec 50             sub    $0x50,%rsp
    124b:       64 48 8b 04 25 28 00    mov    %fs:0x28,%rax
    1252:       00 00 
    1254:       48 89 45 f8             mov    %rax,-0x8(%rbp)
    1258:       31 c0                   xor    %eax,%eax
    125a:       c7 45 c0 05 00 00 00    movl   $0x5,-0x40(%rbp)
    1261:       c7 45 c4 02 00 00 00    movl   $0x2,-0x3c(%rbp)
    1268:       c7 45 c8 03 00 00 00    movl   $0x3,-0x38(%rbp)
    126f:       c7 45 cc 04 00 00 00    movl   $0x4,-0x34(%rbp)
    1276:       c7 45 d0 01 00 00 00    movl   $0x1,-0x30(%rbp)
    127d:       c7 45 e0 01 00 00 00    movl   $0x1,-0x20(%rbp)
    1284:       c7 45 e4 02 00 00 00    movl   $0x2,-0x1c(%rbp)
    128b:       c7 45 e8 03 00 00 00    movl   $0x3,-0x18(%rbp)
    1292:       c7 45 ec 04 00 00 00    movl   $0x4,-0x14(%rbp)
    1299:       c7 45 f0 05 00 00 00    movl   $0x5,-0x10(%rbp)
    12a0:       48 8d 45 c0             lea    -0x40(%rbp),%rax
    12a4:       ba 04 00 00 00          mov    $0x4,%edx
    12a9:       be 00 00 00 00          mov    $0x0,%esi
    12ae:       48 89 c7                mov    %rax,%rdi
    12b1:       e8 9f fe ff ff          callq  1155 <qsort>
    12b6:       c7 45 bc 00 00 00 00    movl   $0x0,-0x44(%rbp)
    12bd:       eb 39                   jmp    12f8 <main+0xb5>
    12bf:       8b 45 bc                mov    -0x44(%rbp),%eax
    12c2:       48 98                   cltq   
    12c4:       8b 54 85 c0             mov    -0x40(%rbp,%rax,4),%edx
    12c8:       8b 45 bc                mov    -0x44(%rbp),%eax
    12cb:       48 98                   cltq   
    12cd:       8b 44 85 e0             mov    -0x20(%rbp,%rax,4),%eax
    12d1:       39 c2                   cmp    %eax,%edx
    12d3:       74 1f                   je     12f4 <main+0xb1>
    12d5:       48 8d 0d 5e 0d 00 00    lea    0xd5e(%rip),%rcx        # 203a <__PRETTY_FUNCTION__.2392>
    12dc:       ba 22 00 00 00          mov    $0x22,%edx
    12e1:       48 8d 35 1c 0d 00 00    lea    0xd1c(%rip),%rsi        # 2004 <_IO_stdin_used+0x4>
    12e8:       48 8d 3d 21 0d 00 00    lea    0xd21(%rip),%rdi        # 2010 <_IO_stdin_used+0x10>
    12ef:       e8 5c fd ff ff          callq  1050 <__assert_fail@plt>
    12f4:       83 45 bc 01             addl   $0x1,-0x44(%rbp)
    12f8:       83 7d bc 04             cmpl   $0x4,-0x44(%rbp)
    12fc:       7e c1                   jle    12bf <main+0x7c>
    12fe:       48 8d 3d 27 0d 00 00    lea    0xd27(%rip),%rdi        # 202c <_IO_stdin_used+0x2c>
    1305:       e8 26 fd ff ff          callq  1030 <puts@plt>
    130a:       b8 00 00 00 00          mov    $0x0,%eax
    130f:       48 8b 4d f8             mov    -0x8(%rbp),%rcx
    1313:       64 48 33 0c 25 28 00    xor    %fs:0x28,%rcx
    131a:       00 00 
    131c:       74 05                   je     1323 <main+0xe0>
    131e:       e8 1d fd ff ff          callq  1040 <__stack_chk_fail@plt>
    1323:       c9                      leaveq 
    1324:       c3                      retq   

0000000000001325 <swap>:
    1325:       55                      push   %rbp
    1326:       48 89 e5                mov    %rsp,%rbp
    1329:       48 89 7d e8             mov    %rdi,-0x18(%rbp)
    132d:       89 75 e4                mov    %esi,-0x1c(%rbp)
    1330:       89 55 e0                mov    %edx,-0x20(%rbp)
    1333:       8b 45 e4                mov    -0x1c(%rbp),%eax
    1336:       48 98                   cltq   
    1338:       48 8d 14 85 00 00 00    lea    0x0(,%rax,4),%rdx
    133f:       00 
    1340:       48 8b 45 e8             mov    -0x18(%rbp),%rax
    1344:       48 01 d0                add    %rdx,%rax
    1347:       8b 00                   mov    (%rax),%eax
    1349:       89 45 fc                mov    %eax,-0x4(%rbp)
    134c:       8b 45 e0                mov    -0x20(%rbp),%eax
    134f:       48 98                   cltq   
    1351:       48 8d 14 85 00 00 00    lea    0x0(,%rax,4),%rdx
    1358:       00 
    1359:       48 8b 45 e8             mov    -0x18(%rbp),%rax
    135d:       48 01 d0                add    %rdx,%rax
    1360:       8b 55 e4                mov    -0x1c(%rbp),%edx
    1363:       48 63 d2                movslq %edx,%rdx
    1366:       48 8d 0c 95 00 00 00    lea    0x0(,%rdx,4),%rcx
    136d:       00 
    136e:       48 8b 55 e8             mov    -0x18(%rbp),%rdx
    1372:       48 01 ca                add    %rcx,%rdx
    1375:       8b 00                   mov    (%rax),%eax
    1377:       89 02                   mov    %eax,(%rdx)
    1379:       8b 45 e0                mov    -0x20(%rbp),%eax
    137c:       48 98                   cltq   
    137e:       48 8d 14 85 00 00 00    lea    0x0(,%rax,4),%rdx
    1385:       00 
    1386:       48 8b 45 e8             mov    -0x18(%rbp),%rax
    138a:       48 01 c2                add    %rax,%rdx
    138d:       8b 45 fc                mov    -0x4(%rbp),%eax
    1390:       89 02                   mov    %eax,(%rdx)
    1392:       90                      nop
    1393:       5d                      pop    %rbp
    1394:       c3                      retq   
    1395:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)
    139c:       00 00 00 
    139f:       90                      nop

00000000000013a0 <__libc_csu_init>:
    13a0:       41 57                   push   %r15
    13a2:       49 89 d7                mov    %rdx,%r15
    13a5:       41 56                   push   %r14
    13a7:       49 89 f6                mov    %rsi,%r14
    13aa:       41 55                   push   %r13
    13ac:       41 89 fd                mov    %edi,%r13d
    13af:       41 54                   push   %r12
    13b1:       4c 8d 25 f0 29 00 00    lea    0x29f0(%rip),%r12        # 3da8 <__frame_dummy_init_array_entry>
    13b8:       55                      push   %rbp
    13b9:       48 8d 2d f0 29 00 00    lea    0x29f0(%rip),%rbp        # 3db0 <__init_array_end>
    13c0:       53                      push   %rbx
    13c1:       4c 29 e5                sub    %r12,%rbp
    13c4:       48 83 ec 08             sub    $0x8,%rsp
    13c8:       e8 33 fc ff ff          callq  1000 <_init>
    13cd:       48 c1 fd 03             sar    $0x3,%rbp
    13d1:       74 1b                   je     13ee <__libc_csu_init+0x4e>
    13d3:       31 db                   xor    %ebx,%ebx
    13d5:       0f 1f 00                nopl   (%rax)
    13d8:       4c 89 fa                mov    %r15,%rdx
    13db:       4c 89 f6                mov    %r14,%rsi
    13de:       44 89 ef                mov    %r13d,%edi
    13e1:       41 ff 14 dc             callq  *(%r12,%rbx,8)
    13e5:       48 83 c3 01             add    $0x1,%rbx
    13e9:       48 39 dd                cmp    %rbx,%rbp
    13ec:       75 ea                   jne    13d8 <__libc_csu_init+0x38>
    13ee:       48 83 c4 08             add    $0x8,%rsp
    13f2:       5b                      pop    %rbx
    13f3:       5d                      pop    %rbp
    13f4:       41 5c                   pop    %r12
    13f6:       41 5d                   pop    %r13
    13f8:       41 5e                   pop    %r14
    13fa:       41 5f                   pop    %r15
    13fc:       c3                      retq   
    13fd:       0f 1f 00                nopl   (%rax)

0000000000001400 <__libc_csu_fini>:
    1400:       c3                      retq   

Disassembly of section .fini:

0000000000001404 <_fini>:
    1404:       48 83 ec 08             sub    $0x8,%rsp
    1408:       48 83 c4 08             add    $0x8,%rsp
    140c:       c3                      retq
